// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceRequestManager.Data;

#nullable disable

namespace ServiceRequestManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServiceRequestManager.Models.ServiceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ServiceRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "john.doe",
                            CreatedDate = new DateTime(2023, 1, 15, 15, 30, 0, 0, DateTimeKind.Local),
                            Description = "My laptop screen is cracked.",
                            Status = "Open",
                            Title = "Laptop screen repair"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "jane.smith",
                            CreatedDate = new DateTime(2023, 1, 16, 20, 0, 0, 0, DateTimeKind.Local),
                            Description = "Need VS Code installed on my new machine.",
                            Status = "In Progress",
                            Title = "Software installation"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "john.doe",
                            CreatedDate = new DateTime(2023, 1, 17, 14, 30, 0, 0, DateTimeKind.Local),
                            Description = "Cannot access internal network drives.",
                            Status = "Closed",
                            Title = "Network connectivity issue"
                        });
                });

            modelBuilder.Entity("ServiceRequestManager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "hashedpasswordplaceholder",
                            Username = "testuser"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
